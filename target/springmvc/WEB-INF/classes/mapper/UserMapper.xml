<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.product.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.product.entity.User">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_code" property="userCode" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_mobile" property="userMobile" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_states" property="userStates" jdbcType="INTEGER"/>
        <result column="user_avator" property="userAvator" jdbcType="VARCHAR"/>
        <result column="company_id" property="companyId" jdbcType="VARCHAR"/>
        <result column="department_id" property="departmentId" jdbcType="VARCHAR"/>
        <result column="system_id" property="systemId" jdbcType="VARCHAR"/>
        <result column="source_id" property="sourceId" jdbcType="VARCHAR"/>
        <result column="secretkey" property="secretkey" jdbcType="VARCHAR"/>
        <result column="outdate" property="outdate" jdbcType="VARCHAR"/>
        <result column="mailvalidatect" property="mailvalidatect" jdbcType="SMALLINT"/>
        <result column="version_num" property="versionNum" jdbcType="BIGINT"/>
        <result column="last_login_date" property="lastLoginDate" jdbcType="VARCHAR"/>
        <result column="telphone" property="telphone" jdbcType="VARCHAR"/>
        <result column="weixin" property="weixin" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="weibo" property="weibo" jdbcType="VARCHAR"/>
        <result column="register_time" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="tag" property="tag" jdbcType="VARCHAR"/>
        <result column="begindate" property="begindate" jdbcType="TIMESTAMP"/>
        <result column="enddate" property="enddate" jdbcType="TIMESTAMP"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="userremark" property="userremark" jdbcType="VARCHAR"/>
        <result column="position" property="position" jdbcType="VARCHAR"/>
        <result column="nikename" property="nikename" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="validate_email" property="validateEmail" jdbcType="INTEGER"/>
        <result column="validate_mobile" property="validateMobile" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    user_id, user_code, user_name, user_mobile, user_password, user_email, user_states, 
    user_avator, company_id, department_id, system_id, source_id, secretkey, outdate, 
    mailvalidatect, version_num, last_login_date, telphone, weixin, qq, weibo, register_time, 
    tag, begindate, enddate, type, status, source, code, sex, userremark, position, nikename, 
    account, validate_email, validate_mobile
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.product.entity.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from pub_tenant_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from pub_tenant_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pub_tenant_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.product.entity.UserExample">
        delete from pub_tenant_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.product.entity.User">
    insert into pub_tenant_user (user_id, user_code, user_name, 
      user_mobile, user_password, user_email, 
      user_states, user_avator, company_id, 
      department_id, system_id, source_id, 
      secretkey, outdate, mailvalidatect, 
      version_num, last_login_date, telphone, 
      weixin, qq, weibo, 
      register_time, tag, begindate, 
      enddate, type, status, 
      source, code, sex, 
      userremark, position, nikename, 
      account, validate_email, validate_mobile
      )
    values (#{userId,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userMobile,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userStates,jdbcType=INTEGER}, #{userAvator,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=VARCHAR}, #{systemId,jdbcType=VARCHAR}, #{sourceId,jdbcType=VARCHAR}, 
      #{secretkey,jdbcType=VARCHAR}, #{outdate,jdbcType=VARCHAR}, #{mailvalidatect,jdbcType=SMALLINT}, 
      #{versionNum,jdbcType=BIGINT}, #{lastLoginDate,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, 
      #{weixin,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{tag,jdbcType=VARCHAR}, #{begindate,jdbcType=TIMESTAMP}, 
      #{enddate,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{source,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{userremark,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{nikename,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{validateEmail,jdbcType=INTEGER}, #{validateMobile,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.product.entity.User">
        insert into pub_tenant_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userCode != null">
                user_code,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userMobile != null">
                user_mobile,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="userStates != null">
                user_states,
            </if>
            <if test="userAvator != null">
                user_avator,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="systemId != null">
                system_id,
            </if>
            <if test="sourceId != null">
                source_id,
            </if>
            <if test="secretkey != null">
                secretkey,
            </if>
            <if test="outdate != null">
                outdate,
            </if>
            <if test="mailvalidatect != null">
                mailvalidatect,
            </if>
            <if test="versionNum != null">
                version_num,
            </if>
            <if test="lastLoginDate != null">
                last_login_date,
            </if>
            <if test="telphone != null">
                telphone,
            </if>
            <if test="weixin != null">
                weixin,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="weibo != null">
                weibo,
            </if>
            <if test="registerTime != null">
                register_time,
            </if>
            <if test="tag != null">
                tag,
            </if>
            <if test="begindate != null">
                begindate,
            </if>
            <if test="enddate != null">
                enddate,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="userremark != null">
                userremark,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="nikename != null">
                nikename,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="validateEmail != null">
                validate_email,
            </if>
            <if test="validateMobile != null">
                validate_mobile,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userMobile != null">
                #{userMobile,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userStates != null">
                #{userStates,jdbcType=INTEGER},
            </if>
            <if test="userAvator != null">
                #{userAvator,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=VARCHAR},
            </if>
            <if test="systemId != null">
                #{systemId,jdbcType=VARCHAR},
            </if>
            <if test="sourceId != null">
                #{sourceId,jdbcType=VARCHAR},
            </if>
            <if test="secretkey != null">
                #{secretkey,jdbcType=VARCHAR},
            </if>
            <if test="outdate != null">
                #{outdate,jdbcType=VARCHAR},
            </if>
            <if test="mailvalidatect != null">
                #{mailvalidatect,jdbcType=SMALLINT},
            </if>
            <if test="versionNum != null">
                #{versionNum,jdbcType=BIGINT},
            </if>
            <if test="lastLoginDate != null">
                #{lastLoginDate,jdbcType=VARCHAR},
            </if>
            <if test="telphone != null">
                #{telphone,jdbcType=VARCHAR},
            </if>
            <if test="weixin != null">
                #{weixin,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="weibo != null">
                #{weibo,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tag != null">
                #{tag,jdbcType=VARCHAR},
            </if>
            <if test="begindate != null">
                #{begindate,jdbcType=TIMESTAMP},
            </if>
            <if test="enddate != null">
                #{enddate,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                #{source,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="userremark != null">
                #{userremark,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
            <if test="nikename != null">
                #{nikename,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="validateEmail != null">
                #{validateEmail,jdbcType=INTEGER},
            </if>
            <if test="validateMobile != null">
                #{validateMobile,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.product.entity.UserExample" resultType="java.lang.Integer">
        select count(*) from pub_tenant_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update pub_tenant_user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.userCode != null">
                user_code = #{record.userCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userMobile != null">
                user_mobile = #{record.userMobile,jdbcType=VARCHAR},
            </if>
            <if test="record.userPassword != null">
                user_password = #{record.userPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.userEmail != null">
                user_email = #{record.userEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.userStates != null">
                user_states = #{record.userStates,jdbcType=INTEGER},
            </if>
            <if test="record.userAvator != null">
                user_avator = #{record.userAvator,jdbcType=VARCHAR},
            </if>
            <if test="record.companyId != null">
                company_id = #{record.companyId,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentId != null">
                department_id = #{record.departmentId,jdbcType=VARCHAR},
            </if>
            <if test="record.systemId != null">
                system_id = #{record.systemId,jdbcType=VARCHAR},
            </if>
            <if test="record.sourceId != null">
                source_id = #{record.sourceId,jdbcType=VARCHAR},
            </if>
            <if test="record.secretkey != null">
                secretkey = #{record.secretkey,jdbcType=VARCHAR},
            </if>
            <if test="record.outdate != null">
                outdate = #{record.outdate,jdbcType=VARCHAR},
            </if>
            <if test="record.mailvalidatect != null">
                mailvalidatect = #{record.mailvalidatect,jdbcType=SMALLINT},
            </if>
            <if test="record.versionNum != null">
                version_num = #{record.versionNum,jdbcType=BIGINT},
            </if>
            <if test="record.lastLoginDate != null">
                last_login_date = #{record.lastLoginDate,jdbcType=VARCHAR},
            </if>
            <if test="record.telphone != null">
                telphone = #{record.telphone,jdbcType=VARCHAR},
            </if>
            <if test="record.weixin != null">
                weixin = #{record.weixin,jdbcType=VARCHAR},
            </if>
            <if test="record.qq != null">
                qq = #{record.qq,jdbcType=VARCHAR},
            </if>
            <if test="record.weibo != null">
                weibo = #{record.weibo,jdbcType=VARCHAR},
            </if>
            <if test="record.registerTime != null">
                register_time = #{record.registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.tag != null">
                tag = #{record.tag,jdbcType=VARCHAR},
            </if>
            <if test="record.begindate != null">
                begindate = #{record.begindate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.enddate != null">
                enddate = #{record.enddate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.source != null">
                source = #{record.source,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.userremark != null">
                userremark = #{record.userremark,jdbcType=VARCHAR},
            </if>
            <if test="record.position != null">
                position = #{record.position,jdbcType=VARCHAR},
            </if>
            <if test="record.nikename != null">
                nikename = #{record.nikename,jdbcType=VARCHAR},
            </if>
            <if test="record.account != null">
                account = #{record.account,jdbcType=VARCHAR},
            </if>
            <if test="record.validateEmail != null">
                validate_email = #{record.validateEmail,jdbcType=INTEGER},
            </if>
            <if test="record.validateMobile != null">
                validate_mobile = #{record.validateMobile,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update pub_tenant_user
        set user_id = #{record.userId,jdbcType=VARCHAR},
        user_code = #{record.userCode,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        user_mobile = #{record.userMobile,jdbcType=VARCHAR},
        user_password = #{record.userPassword,jdbcType=VARCHAR},
        user_email = #{record.userEmail,jdbcType=VARCHAR},
        user_states = #{record.userStates,jdbcType=INTEGER},
        user_avator = #{record.userAvator,jdbcType=VARCHAR},
        company_id = #{record.companyId,jdbcType=VARCHAR},
        department_id = #{record.departmentId,jdbcType=VARCHAR},
        system_id = #{record.systemId,jdbcType=VARCHAR},
        source_id = #{record.sourceId,jdbcType=VARCHAR},
        secretkey = #{record.secretkey,jdbcType=VARCHAR},
        outdate = #{record.outdate,jdbcType=VARCHAR},
        mailvalidatect = #{record.mailvalidatect,jdbcType=SMALLINT},
        version_num = #{record.versionNum,jdbcType=BIGINT},
        last_login_date = #{record.lastLoginDate,jdbcType=VARCHAR},
        telphone = #{record.telphone,jdbcType=VARCHAR},
        weixin = #{record.weixin,jdbcType=VARCHAR},
        qq = #{record.qq,jdbcType=VARCHAR},
        weibo = #{record.weibo,jdbcType=VARCHAR},
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
        tag = #{record.tag,jdbcType=VARCHAR},
        begindate = #{record.begindate,jdbcType=TIMESTAMP},
        enddate = #{record.enddate,jdbcType=TIMESTAMP},
        type = #{record.type,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        source = #{record.source,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=INTEGER},
        userremark = #{record.userremark,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=VARCHAR},
        nikename = #{record.nikename,jdbcType=VARCHAR},
        account = #{record.account,jdbcType=VARCHAR},
        validate_email = #{record.validateEmail,jdbcType=INTEGER},
        validate_mobile = #{record.validateMobile,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.product.entity.User">
        update pub_tenant_user
        <set>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userMobile != null">
                user_mobile = #{userMobile,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userStates != null">
                user_states = #{userStates,jdbcType=INTEGER},
            </if>
            <if test="userAvator != null">
                user_avator = #{userAvator,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=VARCHAR},
            </if>
            <if test="systemId != null">
                system_id = #{systemId,jdbcType=VARCHAR},
            </if>
            <if test="sourceId != null">
                source_id = #{sourceId,jdbcType=VARCHAR},
            </if>
            <if test="secretkey != null">
                secretkey = #{secretkey,jdbcType=VARCHAR},
            </if>
            <if test="outdate != null">
                outdate = #{outdate,jdbcType=VARCHAR},
            </if>
            <if test="mailvalidatect != null">
                mailvalidatect = #{mailvalidatect,jdbcType=SMALLINT},
            </if>
            <if test="versionNum != null">
                version_num = #{versionNum,jdbcType=BIGINT},
            </if>
            <if test="lastLoginDate != null">
                last_login_date = #{lastLoginDate,jdbcType=VARCHAR},
            </if>
            <if test="telphone != null">
                telphone = #{telphone,jdbcType=VARCHAR},
            </if>
            <if test="weixin != null">
                weixin = #{weixin,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="weibo != null">
                weibo = #{weibo,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
            <if test="begindate != null">
                begindate = #{begindate,jdbcType=TIMESTAMP},
            </if>
            <if test="enddate != null">
                enddate = #{enddate,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="userremark != null">
                userremark = #{userremark,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
            </if>
            <if test="nikename != null">
                nikename = #{nikename,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="validateEmail != null">
                validate_email = #{validateEmail,jdbcType=INTEGER},
            </if>
            <if test="validateMobile != null">
                validate_mobile = #{validateMobile,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.product.entity.User">
    update pub_tenant_user
    set user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_states = #{userStates,jdbcType=INTEGER},
      user_avator = #{userAvator,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},
      system_id = #{systemId,jdbcType=VARCHAR},
      source_id = #{sourceId,jdbcType=VARCHAR},
      secretkey = #{secretkey,jdbcType=VARCHAR},
      outdate = #{outdate,jdbcType=VARCHAR},
      mailvalidatect = #{mailvalidatect,jdbcType=SMALLINT},
      version_num = #{versionNum,jdbcType=BIGINT},
      last_login_date = #{lastLoginDate,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      weixin = #{weixin,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      tag = #{tag,jdbcType=VARCHAR},
      begindate = #{begindate,jdbcType=TIMESTAMP},
      enddate = #{enddate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      userremark = #{userremark,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      nikename = #{nikename,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      validate_email = #{validateEmail,jdbcType=INTEGER},
      validate_mobile = #{validateMobile,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

    <insert id="insertUserBatch" parameterType="java.util.List">
        insert into seckill.pub_tenant_user
        (user_id,user_name,user_mobile,user_email,user_password,user_states,user_code) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userId}, #{item.userName},
            #{item.userMobile},#{item.userEmail},
            #{item.userPassword}, #{item.userStates},
            #{item.userCode}
            )
        </foreach>
    </insert>
</mapper>